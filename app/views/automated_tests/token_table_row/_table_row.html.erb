<% if grouping.non_rejected_student_memberships.size > 0 %>

<tr
<% if grouping.is_collected? %>
  style="background-color: #90EE90"
<% end %>>
<% test_script_results = TestScriptResult.order("created_at DESC").find(:first, grouping.id) %>
<td>
  <input type="checkbox"
         name="groupings[]"
         class="ap_selectable"
         id="grouping_<%= grouping.id %>"
         value="<%= grouping.id %>" />

</td>
<td>
  <% if !grouping.has_submission? %>
    <% if Time.zone.now >=
    assignment.submission_rule.calculate_grouping_collection_time(grouping) %>
      <%= link_to h(grouping.group.group_name),
                  collect_and_begin_grading_assignment_submission_path(
                      assignment.id,
                      grouping.id) %>
    <% else %>
      <%= h(grouping.group.group_name) %>
    <% end %>
  <% elsif !grouping.is_collected %>
    <%= link_to h(grouping.group.group_name),
                collect_and_begin_grading_assignment_submission_path(
                      assignment.id,
                      grouping.id) %>
  <% elsif grouping.current_submission_used.remark_submitted? %>
    <%= link_to h(grouping.group.group_name),
                 edit_assignment_submission_result_path(
                   assignment.id,
                   grouping.current_submission_used.id,
                   grouping.current_submission_used.remark_result) %>
  <% else %>
    <%= link_to h(grouping.group.group_name),
                 edit_assignment_submission_result_path(
                   assignment.id,
                   grouping.current_submission_used.id,
                   grouping.current_submission_used.result) %>
  <% end %>
    (<%= h(grouping.accepted_students.collect{ |student| student.user_name}.join(',')) %>)
  <%='<span class="invalid">' + t(:invalid_grouping) + '</span>' if !grouping.is_valid? %>
  </td>
  <% if !@details.nil? %>
    <% assignment.rubric_criteria.each do |criterion| %>
      <td>
        <% if grouping.has_submission? %>
          <% mark = grouping.current_submission_used.result.marks.find_by_markable_id(criterion.id) %>
          <% if mark.nil? || mark.mark.nil?%>
           -
          <% else %>
            <%= mark.mark %>
          <% end %>
        <% else %>
          -
        <% end %>
      </td>
    <% end %>
  <% else %>
    <td>
      <%= link_to h(grouping.group.repository_name),
                  repo_browser_assignment_submission_path(assignment,
                                                          grouping) %>
    </td>
  <% end %>
  
  <td class="marking_state">
		<% if test_script_results.nil? || test_script_results.created_at.nil?%>
         -
        <% else %>
    		<%= test_script_results.created_at.strftime("%F %R") %>
		<%end%>
  </td>
  <td>
    <% if @assignment.unlimited_tokens %>
          <%= raw( I18n.t("automated_tests.token.unlimited") ) %>
      <% else %>
        <%= raw( I18n.t("automated_tests.token.tokens_per_day",
                         :tokens => @assignment.tokens_per_day) ) %>
      <% end %>
  </td>
  <td>
	<% if test_script_results.nil? || test_script_results.marks_earned.nil?%>
     -
    <% else %>
		<%= test_script_results.marks_earned %>
	<%end%>
	
  </td>

  <%# We don't need to display the section of the group unless it is a section group 
      assignment %>
  <% if assignment.section_groups_only %>
  <td>
  	<%= h(grouping.section) %>
  </td>
  <% end %>
  <td>
	<div id="test_results" class="sub_block">
		<% if test_script_results.nil? || test_script_results.marks_earned.nil?%>
	     	No tests run yet.
	    <% else %>

			<ul>
		  	<% test_script = TestScript.find(test_script_results.test_script_id) %>
		  	<li>
		  	  <%= I18n.t("automated_tests.script_name") %> <%= test_script.script_name %>
		  	  <ul>
		  	  <li><%= I18n.t("automated_tests.marks_earned") %> <%= test_script_results.marks_earned %></li>
		  	  <li><%= I18n.t("automated_tests.date_run") %> <%= test_script_results.created_at.strftime("%F %R") %></li>
		  	  <li><%= I18n.t("automated_tests.revision_used") %> <%= test_script_results.repo_revision.to_i %></li>
		   	  <% test_results = TestResult.where(:grouping_id => test_script_results.grouping_id, 
		   	                                     :test_script_id => test_script_results.test_script_id, 
		   	                                     :test_script_result_id => test_script_results.id) %>
		  	  <% test_results.each do |t_result| %>
		 	      <li><%= I18n.t("automated_tests.test_name") %> <%= t_result.name %></li>
		   	    <ul>
		   	      <% if test_script.display_run_status == "display_after_submission" or
		   	      			(test_script.display_run_status == "display_after_collection" &&
		   	      			grouping.is_collected) %>
			 	        <li><%= I18n.t("automated_tests.completion_status") %> <%= t_result.completion_status %></li>
			 	      <% end %>
			 	      <% if test_script.display_marks_earned == "display_after_submission" or
			   	      		(test_script.display_marks_earned == "display_after_collection" &&
			   	      		grouping.is_collected) %>
			 	        <li><%= I18n.t("automated_tests.marks_earned") %> <%= t_result.marks_earned %></li>
			 	      <% end %>
			 	      <% if test_script.display_input == "display_after_submission" or
                    (test_script.display_input == "display_after_collection" &&
                    grouping.is_collected) %>
			  	      <li><%= I18n.t("automated_tests.input_description") %> <%= t_result.input_description %></li>
			  	    <% end %>
			 	      <% if test_script.display_actual_output == "display_after_submission" or
                    (test_script.display_actual_output == "display_after_collection" &&
                    grouping.is_collected) %>
			  	      <li><%= I18n.t("automated_tests.actual_output") %> <%= t_result.actual_output %></li>
			  	    <% end %>
			 	      <% if test_script.display_expected_output == "display_after_submission" or
                    (test_script.display_expected_output == "display_after_collection" &&
                    grouping.is_collected) %>
			  	      <li><%= I18n.t("automated_tests.expected_output") %> <%= t_result.expected_output %></li>
			  	    <% end %>
		  	    </ul>
		  	    <ul> </ul>
		  	  <% end %>
		  	  </ul>
		  	</li>
		  </ul>
		<%end%>
		</div>
  </td>
</tr>

<% end %>
